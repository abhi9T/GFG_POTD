//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    
    int f(int n, int total, vector<int> &cost, int ind, vector<vector<int>>&dp){
        if(ind>=n) return 0;
        if(dp[ind][total]!=-1) return dp[ind][total];
        
        int take=0;
        if(cost[ind] <= total){
            take = 1+f(n, total - cost[ind] + floor(0.9*cost[ind]), cost, ind+1, dp);
        }
        int not_take=f(n,total, cost, ind+1, dp);
        
        return dp[ind][total]=max(take, not_take);
        
    }
    
    int max_courses(int n, int total, vector<int> &cost)
    {
        //Code Here
        vector<vector<int>>dp(n+1, vector<int>(total+1,-1));
        int ans = f(n, total, cost, 0, dp);
        return ans;
    }
};


//{ Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int k;
        cin>>k;
        vector<int> arr(n);
        for(int i=0;i<n;i++) cin>>arr[i];
        Solution ob;
        cout<<ob.max_courses(n,k,arr)<<endl;
    }
}
// } Driver Code Ends
